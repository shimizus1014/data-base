10-1 インデックス
       ↑
特定のkラムのレコードを検索するための仕組み
イメージ）本の索引
          キーワードを1ページから順番に探さなくても索引で紐づけられている
          ページをもとに検索すれば、効率よくキーワードを見つけることができる。

インデックスを作成
  ↓  検索対象のカラムとレコードを順番に紐づけて管理
  ↓  【メリット】  本の索引を利用して目的のキーワードを含むページを検索できる
  ↓                ように、効率よくキーワードを含むレコードを検索できる。
  ↓  【デメリット】①本の索引にページ数を割くように、インデックスに容量を割く
  ↓                  必要がある。
  ↓                ②対象のカラムが更新されると当然インデックスも更新する必要
  ↓                  があるため、更新処理に時間を要する。
  ↓
検索アルゴリズムの活用：Bツリーなど
  ↓  検索対象のキーワードをインデックスから効率よく検索するためのアルゴリズム
  ↓  (例] ほんの索引のように、キーワードをアルファベット順に整理する、など）
  ↓
テーブルから目的のキーワードを含むレコードを検索

【インデックスの種類】
  ①PRIMARY：主キーの設定に採用
             一意でなければならない。1つのテーブに1つだけ設定可能。
  ②UNIQUE ：ユニークキーの設定に採用
             複数レコードを持つことはできない。
             ユニークキーは複数のカラムで設定できるので、必ずしもインデックス
             内のカラムがユニークであることを意味するのではなく、これらの
             カラム間のデータの組み合わせがユニークであることを意味する。
  ③INDEX  ：通常のカラムの設定に使用
             主キーやユニークキーではない場合、テーブルに挿入されたデータを
             制約することはできないが、より効率的にデータを検索することが
             できる。
  ④FULLTEXT：全文検索を可能にする、より専門的なインデックスの形式。
              基本的には、指定されたカラム（テキスト型）の各単語に対して、
              インデックスを作成する。

【インデックスの確認】
  ※ MySQLでは、主キーや外部キーを設定したカラムにはインデックスが設定される。

 [基本構文]SHOW INDEX FROM テーブル名;
【確認】   SHOW INDEX FROM jusho;

 [phpMyAdmin] [P.246]
  →テーブルを選択＞[構造]タブ＞下部の「インデックス」メニューを展開

【インデックスの作成】
 [基本構文] ALTER TABLE テーブル名 ADD INDEX (カラム名リスト);
              ↑                                    ↑
            作成済みの項目に対して               単一カラムだけでなく、
            変更を加えるときに使用する命令       複数カラムにも設置可能

【確認】
 [SQL] ALTER TABLE jushoADD INDEX(company);

 [phpMyAdmin]
    ①テーブルを選択＞[構造]タブ＞下部の「インデックス」メニューを展開
                                ＞実行
    ②表示されるインデックスの設定画面から下記の項目を指定＞実行
      ・Index choice：インデックスの種類（今回は、INDEXを選択）
      ・カラム      ：設定するカラム    （今回は、stateを選択）
    ③インデックスの表示領域（手順①）に作成したインデックスが追加される。

【インデックスの使用状況の確認】