Chapter05 演算子


5-1 演算子とは

 SQL文は、演算の結果を使用することができる。
          ↓
          オペランド）演算の対象となる値
          演  算  子）式で実行する計算の種類を指定する記号

【演算子の種類】
  ①算術演算子：値を計算する演算子
  ②比較演算子：値を比較する演算子
  ③論理演算子：複数の条件を組み合わせる演算子

※ FROM句のないSELECT文

→ MySQLを含め、いくつかのDBMSで利用可能！
→ 用途：演算の結果や関数の仕様の確認などに利用！


5-2 算術演算子

 基本的な算術演算子：+、-、*、/
 上記に加えて、商  を求める演算子（DIV）及び         ←整数除算
               余りを求める演算子（%、MOD）も含まれる

【確認】13÷3=4…1
 [図5-2] 除算 SELECT 13/3;     ←4.3333
         商   SELECT 13 DIV 3; ←4
         余り SELECT 13 % 3;   ←1
              SELECT 13 MOD 3; ←1

 [リスト5-1]
  SELECT *, charge * 1.08 FROM uriage;
         ↑
 （出力された）uriageテーブルのすべてのカラムに、
 「charge * 1.08」という名前のカラムが追加され、その列に計算結果が出力される。


5-3 比較演算子

 基本的な比較演算子：=、<>、<、>、<=、>=
                     ↑ ↑
                 等しい 等しくない(!=も使用可）
                                   ※他のDBMSとの互換性を考え、控えておく。

【確認】
 [リスト5-6]
  SELECT * FROM uriage WHERE charge >= 200000;        ←6件
  SELECT * FROM uriage WHERE company <> 'シリウス社'; ←20件
  SELECT * FROM uriage WHERE company != 'シリウス社'; ←20件

※ 上記の演算子に加えて、
   下記の演算子も含まれる。

① IS:NULLには統合演算子（=)は使えない！
  <=>:NULLにも使える演算子！

【確認】
  SELECT * FROM uriage WHERE salesdate = NULL;    ←×
  SELECT * FROM uriage WHERE salesdate IS NULL;   ←〇
  SELECT * FROM uriage WHERE salesdate <=> NULL;  ←〇
                                       ↑
                                   NULL専用ではない！
                                       ↓
  SELECT * FROM uriage WHERE salesdate <=> '2017-09-04'; ←〇

② LIKE;あいまい検索
        →あいまいな文字の表現に使用する記号は、２つ！
          ①%:0文字以上の人の文字
          ②_:任意の1文字
              →文字数指定の場合、指定数だけ_を使用する。

 [パターン1]
  ・後方一致）'%区'       →港区、板橋区、世田谷区 など
  ・前後一致）'東京都%市  →東京都町田市、東京都武蔵野市 など
              'ボールペン_1ダース'
                          →ボールペン赤1ダース、ボールペン黒1ダース など
  ・前方一致）'大阪%'     →大阪府、大阪市、大阪市役所 など
  ・部分一致）'%有限会社%'→○○有限会社、有限会社×× など

【確認】
 [リスト5-8]
  SELECT * FROM uriage WHERE area LIKE '%区';  ←20件
  SELECT * FROM uriage WHERE area LIKE '__区';  ←4件

③ BETWEEN：指定範囲内を示す演算子（※指定した値を含む！）
  [書式] BETWEEN 下限値 AND 上限値
         →下限値 以上 上限値 以下（×下限値 以上 上限値 未満）

 [使用例]
  ・BETWEEN 20 AND 25→20以上25以下
  ・BETWEEN '2017/01/01' AND '2017/09/30'
    →2017/01/01 以降 2017/09/30 以前

 ※文字列の範囲指定も可能だが、大小関係がわかりにくい場合もあるので、要注意！
                              （文字コードの比較になるので）

【確認】
 [リスト5-10]
  SELECT * FROM uriage WHERE charge BETWEEM 200000 AND 300000;      ←5件
  SELECT * FROM uriage WHERE charge >= 200000 AND charge <= 300000; ←5件

④ IN：論理和に相当する演算子
  [書式] IN(値,値,値,…)
  
 [使用例]
  ・IN('シリウス社','ベガ社','カノープス社')
  ・IN(222,555,777)

【確認】
 [リスト5-12]
  SELECT * FROM uriage
  WHERE company IN('シリウス社','ベガ社','カノープス社');←16件
                                                           ↓
  SLECT * FROM uriage
  WHERE company = 'シリウス社' OR company = 'ベガ社' OR company = 'カノープス社';
                               ↑論理和[次節参照]    ↑


5-4 論理演算子

  基本的な論理演算子：AND（かつ）、OR（または）、NOT（ではない）

注意① Javaと同様、演算子の記号（&&、||、!）も利用できるが、
       下記の点で使用を控えるほうが良い。
       ①標準SQLの記法ではない。
       ②他のDBMSとの互換性が懸念される。

注意② 論理演算子には優先順位がある。
       NOT > AND > OR
       意図しない結果になる可能性があるので、要注意！
       →必要に応じて、()を利用して優先順位を上げる。

 [例] [リスト5-14] NOT company = 'シリウス社' OR company ='ベガ社'
                   →シリウス社ではない、または ベガ社である
      [リスト5-15] NOT (company ='シリウス社' OR company ='ベガ社')
                   →シリウス社でもベガ社でもない

 [参考] https://dev.myswl.com/doc/refman/5.6/ja/operator-precedence.html
        算術           > 比較  >論理
        [乗除 > 加減]     ↑   [否定 > 論理積 > 論理和]
          ↑           序列なし
     DIV、%、MOD

【確認】
 [リスト5-18]
  SELECT * FROM uriage WHERE charge >= 200000 AND state = '東京都'; ←6件


