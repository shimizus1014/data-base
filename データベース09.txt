Chapter 09 データベースとテーブルの作成

9-1 データベースの作り方

データベース：互いに独立したデータ保存領域→フォルダ
    テーブル：データを保存する領域

※ フォルダやファイルにアクセス制御できるように、
   データベースやテーブルにもアクセス制御できる。

【データベースの作成手順】

 ① DBMSにログイン ：書籍の設定
                     DBMS：MySQL
                     ユーザー：管理者（×一般ユーザー）
                     ユーザー名：root
                     パスワード：rdbpass (本書では設定されている）

 ② データベースの作成：データベース名：mydbexample
                        (プログラムからの利用も考慮し、英字を採用）
                        文字コード：UTF-8
                        (文字化け対策、プログラミング言語の仕様 など）

 ③ テーブルの作成：テーブル名、カラム名、データ型
                    ほかにも、他のテーブルとの連携を考慮すると
                    いろいろ事前にきめておくことがある。
                    →テーブル定義所の作成[例）P.220 図9-4]


9-2 ログインとデータベースの作成

①ログイン
  ・ユーザーは、一般ユーザーではなく、管理者ユーザーを使用する。
    →一般的に、「root」で指定されている場合が多い。
    （ちなみに、Windowsは「Administrator」を採用している）
  ・パスワードは、事前に確認しておく必要がある。

②データベースの作成
  ・データベース名は任意だが、将来、数が笛うことを見越して、管理しやすい
    名前をつけるように心がける。
    →今回は、「mydbexample」とする。
  ・照合順序（文字コード種類、文字の取り扱いの既定など）は、日本語を
    取り扱うデータベースの場合、「utf8_general_ci」を採用すれば問題なし。

9-3 単一テーブルの作成
      ↑
他のテーブルとの連携を考慮しない

【設計のポイント】
  ★ 基本項目
  ①テーブル名：どのようなデータを管理するテーブルなのか、が分かる名前にする。
                アプリからの使用も視野に半角英数を採用する。
  ②カラム名  ：格納するデータの内容が分かる名前にする。
                テーブル名と同様、半角英数を採用する。
  ③データ型  ：カラム名に該当するデータが格納されていることが保証されるように
                データの種類（型）を決める。
                数値の桁数や文字数についても「大は小を兼ねる」的な発想ではなく
                保存されているデータが保証されるように検討して決める。

  ☆ 臨時項目：制約の設定
  A 主キー
    レコードを一意に特定するための値が格納されているカラムに設定する。
    →他のレコードと重複する値の格納が禁止される！
    
    併用可）オートインクリメント機能：自動連番機能
            INSERT文で入力値を指定しなくても数値が自動的に格納される。
          （開始の数値：1）

  B ユニークキー
    ほかのレコードと重複する値の格納が禁止される。
    主キーとの違い）主キー      ：NULL禁止
                    ユニークキー：NULL許容

  C NOT NULL制約
    NULL禁止。値の入力を必須にしたいカラムに設定する。
    
    併用可）デフォルト値：規定値
            INSERT文で入力値が指定されなかった場合に使用される値を設定できる。

  D 外部キー[P.235 9-4節]
      ↓

9-4 他テーブルと連携する

  テーブル同士は物理的に分かれているため、連携するためにはWHERE句やJOIN句で
  結合条件を指定する必要がある。
  その際、結合を保証させるために参照先のカラムに制約を加えることができる。
  その制約を『外部キー』という。

【外部キー制約】
  論理的な結合が保証されるために、テーブル同士の連携が切れる操作は禁止される！
  ・参照元テーブル）参照元のカラムを削除できない！
  ・参照先テーブル）参照元のカラムにある値のみ設定できる！

  ※ちなみに、テキストの場合、参照元テーブルは、在庫テーブルであり、
                              参照先テーブルは、出庫テーブルである。

  ※制約の内容は、参照アクションで設定できる。
    ①RESTRICT/NO ACTION：参照元のカラムの削除を禁止する（既定の動作）。
    ②CASCADE：参照元のカラムを更新すると連動して参照先のカラムも更新する。
    ③SET NULL：参照元のKラムを更新すると参照先のカラムの値をNULLに設定する。
